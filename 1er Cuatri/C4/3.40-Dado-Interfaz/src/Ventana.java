
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author theBoss
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputDinero = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btn_bet = new javax.swing.JButton();
        btn_moneyEnter = new javax.swing.JButton();
        input_bet = new javax.swing.JTextField();
        btn_play = new javax.swing.JButton();
        lbl_DadoUno = new javax.swing.JLabel();
        lbl_DadoTres = new javax.swing.JLabel();
        lbl_DadoDos = new javax.swing.JLabel();
        lblResultado = new javax.swing.JLabel();
        lblResul = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        inputDinero.setBackground(new java.awt.Color(255, 255, 204));
        inputDinero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputDineroActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Super Mario 256", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("suerte en dados");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btn_bet.setBackground(new java.awt.Color(255, 204, 51));
        btn_bet.setFont(new java.awt.Font("Super Mario 256", 0, 18)); // NOI18N
        btn_bet.setForeground(new java.awt.Color(255, 255, 255));
        btn_bet.setText("apostar");
        btn_bet.setEnabled(false);
        btn_bet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_betMouseClicked(evt);
            }
        });
        btn_bet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_betActionPerformed(evt);
            }
        });

        btn_moneyEnter.setBackground(new java.awt.Color(255, 204, 51));
        btn_moneyEnter.setFont(new java.awt.Font("Super Mario 256", 0, 18)); // NOI18N
        btn_moneyEnter.setForeground(new java.awt.Color(255, 255, 255));
        btn_moneyEnter.setText("ingresar dinero");
        btn_moneyEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_moneyEnterActionPerformed(evt);
            }
        });
        btn_moneyEnter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_moneyEnterKeyPressed(evt);
            }
        });

        input_bet.setBackground(new java.awt.Color(255, 255, 204));
        input_bet.setActionCommand("<Not Set>");
        input_bet.setEnabled(false);
        input_bet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_betActionPerformed(evt);
            }
        });

        btn_play.setBackground(new java.awt.Color(255, 153, 51));
        btn_play.setFont(new java.awt.Font("Super Mario 256", 0, 24)); // NOI18N
        btn_play.setForeground(new java.awt.Color(255, 255, 255));
        btn_play.setText("TIRAR !");
        btn_play.setEnabled(false);
        btn_play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_playMouseClicked(evt);
            }
        });
        btn_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_playActionPerformed(evt);
            }
        });

        lbl_DadoUno.setBackground(new java.awt.Color(255, 255, 255));
        lbl_DadoUno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        lbl_DadoTres.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        lbl_DadoDos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        lblResul.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        lblResul.setForeground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_moneyEnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputDinero))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(input_bet, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(btn_bet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_DadoUno, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_play)
                            .addComponent(lbl_DadoDos, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(lbl_DadoTres, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(lblResul, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lblResultado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(input_bet, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(inputDinero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_moneyEnter, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btn_bet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_DadoUno, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_DadoTres, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_DadoDos, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_play, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(lblResultado)
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblResul, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputDineroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputDineroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputDineroActionPerformed

    private void btn_betActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_betActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_betActionPerformed

    private void btn_moneyEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_moneyEnterActionPerformed

        if (inputDinero.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debera ingresar dinero para jugar");
            inputDinero.requestFocus();
        } else {
            float dinero = (float) Double.parseDouble(inputDinero.getText());

            if (dinero < 1) {
                JOptionPane.showMessageDialog(null, "Error, ingrese un saldo mayor a 0");
                inputDinero.setText(null);
                inputDinero.requestFocus();
            } else {
                btn_moneyEnter.setEnabled(false);
                inputDinero.setEnabled(false);
                input_bet.setEnabled(true);
                btn_bet.setEnabled(true);
            }

        }

    }//GEN-LAST:event_btn_moneyEnterActionPerformed

    private void input_betActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_betActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_betActionPerformed

    private void btn_moneyEnterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_moneyEnterKeyPressed
        // TODO add your handling code here:


    }//GEN-LAST:event_btn_moneyEnterKeyPressed

    private void btn_betMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_betMouseClicked

        float cash = (float) Double.parseDouble(inputDinero.getText());
        if (btn_bet.isEnabled()) {

            if (input_bet.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "No apostastes nada >:|, deberas apostar aunque sea un poco :) ");
            } else {
                float bet = (float) Double.parseDouble(input_bet.getText());
                float dinero = (float) Double.parseDouble(inputDinero.getText());
                if (bet < 1) {
                    JOptionPane.showMessageDialog(null, "Error, apostastes en saldo negativo :S");
                    input_bet.setText(null);
                    input_bet.requestFocus();

                } else if (bet > dinero) {
                    JOptionPane.showMessageDialog(null, "No te alcanza la guita Argento.  Aposta menos  !");
                    input_bet.setText(null);
                    input_bet.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(null, " A jugar !!");

                    inputDinero.setText(String.valueOf(dinero - bet));
                    input_bet.setEnabled(false);
                    btn_bet.setEnabled(false);

                    lbl_DadoUno.setEnabled(true);
                    lbl_DadoDos.setEnabled(true);
                    lbl_DadoTres.setEnabled(true);
                    btn_play.setEnabled(true);
                    btn_play.requestFocus();

                }

            }

        }

    }//GEN-LAST:event_btn_betMouseClicked

    private void btn_playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_playActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_playActionPerformed

    private void btn_playMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_playMouseClicked

        if (btn_play.isEnabled()) {

            int dadoUno = (int) Math.floor(Math.random() * (6 - 1 + 1) + (1));
            int dadoDos = (int) Math.floor(Math.random() * (6 - 1 + 1) + (1));
            int dadoTres = (int) Math.floor(Math.random() * (6 - 1 + 1) + (1));
            float cash = (float) Double.parseDouble(inputDinero.getText());
            float bet = (float) Double.parseDouble(input_bet.getText());
            float cash_winner, bet_winner;
            int flag = 0;

            switch (dadoUno) {

                case 1:
                    ImageIcon icono1 = new ImageIcon(getClass().getResource("img/1.png"));
                    lbl_DadoUno.setIcon(icono1);
                    break;

                case 2:
                    ImageIcon icono2 = new ImageIcon(getClass().getResource("img/2.png"));
                    lbl_DadoUno.setIcon(icono2);
                    break;

                case 3:
                    ImageIcon icono3 = new ImageIcon(getClass().getResource("img/3.png"));
                    lbl_DadoUno.setIcon(icono3);

                    break;

                case 4:
                    ImageIcon icono4 = new ImageIcon(getClass().getResource("img/4.png"));
                    lbl_DadoUno.setIcon(icono4);
                    break;

                case 5:
                    ImageIcon icono5 = new ImageIcon(getClass().getResource("img/5.png"));
                    lbl_DadoUno.setIcon(icono5);

                    break;

                case 6:
                    ImageIcon icono6 = new ImageIcon(getClass().getResource("img/6.png"));
                    lbl_DadoUno.setIcon(icono6);
                    break;
            }

            switch (dadoDos) {

                case 1:
                    ImageIcon icono1 = new ImageIcon(getClass().getResource("img/1.png"));
                    lbl_DadoDos.setIcon(icono1);
                    break;
                case 2:
                    ImageIcon icono2 = new ImageIcon(getClass().getResource("img/2.png"));
                    lbl_DadoDos.setIcon(icono2);
                    break;
                case 3:
                    ImageIcon icono3 = new ImageIcon(getClass().getResource("img/3.png"));
                    lbl_DadoDos.setIcon(icono3);

                    break;
                case 4:
                    ImageIcon icono4 = new ImageIcon(getClass().getResource("img/4.png"));
                    lbl_DadoDos.setIcon(icono4);

                    break;
                case 5:
                    ImageIcon icono5 = new ImageIcon(getClass().getResource("img/5.png"));
                    lbl_DadoDos.setIcon(icono5);

                    break;
                case 6:
                    ImageIcon icono6 = new ImageIcon(getClass().getResource("img/6.png"));
                    lbl_DadoDos.setIcon(icono6);

                    break;
            }
            switch (dadoTres) {

                case 1:
                    ImageIcon icono1 = new ImageIcon(getClass().getResource("img/1.png"));
                    lbl_DadoTres.setIcon(icono1);
                    break;

                case 2:
                    ImageIcon icono2 = new ImageIcon(getClass().getResource("img/2.png"));
                    lbl_DadoTres.setIcon(icono2);
                    break;
                case 3:
                    ImageIcon icono3 = new ImageIcon(getClass().getResource("img/3.png"));
                    lbl_DadoTres.setIcon(icono3);
                    break;

                case 4:
                    ImageIcon icono4 = new ImageIcon(getClass().getResource("img/4.png"));
                    lbl_DadoTres.setIcon(icono4);
                    break;

                case 5:
                    ImageIcon icono5 = new ImageIcon(getClass().getResource("img/5.png"));
                    lbl_DadoTres.setIcon(icono5);
                    break;

                case 6:
                    ImageIcon icono6 = new ImageIcon(getClass().getResource("img/6.png"));
                    lbl_DadoTres.setIcon(icono6);
                    break;

            }

            if (dadoUno == 6 && dadoDos == 6 && dadoTres == 6) {

                bet_winner = bet * 5;
                input_bet.setText(String.valueOf(bet_winner));
                lblResul.setText(String.valueOf("Ganastes! $" + bet_winner));

            } else if ((dadoUno < 6 && dadoUno == dadoDos && dadoUno == dadoTres)
                    || (dadoDos < 6 && dadoDos == dadoUno && dadoDos == dadoTres)
                    || (dadoTres < 6 && dadoTres == dadoUno && dadoTres == dadoDos)) {

                bet_winner = bet * 3;
                input_bet.setText(String.valueOf(bet_winner));
                lblResul.setText(String.valueOf("Ganastes! $" + bet_winner));

            } else if (dadoUno == dadoDos || dadoUno == dadoTres || dadoDos == dadoTres) {

                bet_winner = bet * 2;
                input_bet.setText(String.valueOf(bet_winner));
                lblResul.setText(String.valueOf("Ganastes! $" + bet_winner));

            } else {

                flag = 1;
                input_bet.setText("");
                lblResul.setText(String.valueOf("Perdistes Todo!"));

                if (cash == 0) // SI AL PERDER NO TIENE DINERO DEBERA INGRESAR MAS
                {
                    int resp = JOptionPane.showConfirmDialog(null, "Perdistes y no tenes mas dinero ! ¿Queres ingresar mas dinero o terminamos el juego?");
                    if (JOptionPane.OK_OPTION == resp) {
                        input_bet.setEnabled(false);
                        btn_play.setEnabled(false);
                        btn_bet.setEnabled(false);
                        inputDinero.setEnabled(true);
                        btn_moneyEnter.setEnabled(true);
                        inputDinero.setText("");
                    } else {

                        input_bet.setEnabled(false);
                        btn_play.setEnabled(false);
                        btn_bet.setEnabled(false);
                        lblResul.setText("JUEGO TERMINADO");

                    }
                } else // TIENE DINERO, PUEDE SEGUIR APOSTANDO
                {
                    int resp = JOptionPane.showConfirmDialog(null, "Perdistes! ¿Queres seguir apostando o terminamos el juego?");
                    if (JOptionPane.OK_OPTION == resp) {

                        input_bet.setEnabled(true);
                        btn_bet.setEnabled(true);
                        btn_play.setEnabled(false);
                        btn_bet.setEnabled(true);

                    }else{
                        input_bet.setEnabled(false);
                        btn_play.setEnabled(false);
                        btn_bet.setEnabled(false);
                        lblResul.setText("JUEGO TERMINADO");
                }
                }
            }
        }
    }//GEN-LAST:event_btn_playMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);

            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_bet;
    private javax.swing.JButton btn_moneyEnter;
    private javax.swing.JButton btn_play;
    private javax.swing.JTextField inputDinero;
    private javax.swing.JTextField input_bet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblResul;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JLabel lbl_DadoDos;
    private javax.swing.JLabel lbl_DadoTres;
    private javax.swing.JLabel lbl_DadoUno;
    // End of variables declaration//GEN-END:variables
}
