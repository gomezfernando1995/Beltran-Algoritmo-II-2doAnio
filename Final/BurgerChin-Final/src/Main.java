
import font.Fuentes;
//import java.awt.Color;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;


/**
 *
 * @author GOMEZ FERNANDO
 */
public class Main extends javax.swing.JFrame {

    // DATOS DE LA BASE DE DATS
    String bd = "mc-boliche";
    String url = "jdbc:mysql://localhost:3306/";
    String user = "root";
    String password = "1234";
    String driver = "com.mysql.cj.jdbc.Driver";
    Connection cx;
    ResultSet rs;
    PreparedStatement st;
    Fuentes tipoFuente;
    ArrayList<Producto> aList_productos = new ArrayList();
    DefaultTableModel modelo = new DefaultTableModel();

    public Main() throws SQLException {

        //Conecto a la base de datos
        try {
            Class.forName(driver);
            cx = DriverManager.getConnection(url + bd, user, password);
        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println("NO SE CONECTÃ“ a la base de datos: " + bd);
            Logger.getLogger(Connection.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
        //SETEAMOS ICONO
        setIconImage(new ImageIcon(getClass().getResource("img/logo.png")).getImage());
        //AGREGADO DE FUENTES EXTERNAS
        setDeFuentes();
        //AGREGADO DE NOMBRES A LA TABLA
        setTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCheck = new javax.swing.JLabel();
        lblCodProducto = new javax.swing.JLabel();
        hamburguesa = new javax.swing.JLabel();
        pnl = new javax.swing.JScrollPane();
        tblEleccion = new javax.swing.JTable();
        txtCodProducto = new javax.swing.JTextField();
        btnFinalizarPedido = new javax.swing.JLabel();
        txtSuPago = new javax.swing.JTextField();
        txtCambio = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        lblCambio = new javax.swing.JLabel();
        lblSuPago = new javax.swing.JLabel();
        barra = new javax.swing.JPanel();
        txtTotal = new javax.swing.JTextField();
        lblMapaDeComida = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        lblClear = new javax.swing.JLabel();
        lblSupago_error = new javax.swing.JLabel();
        img_patron = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BurgerChin - Sistema de Pedido");
        setLocation(new java.awt.Point(250, 75));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/check_gris.png"))); // NOI18N
        lblCheck.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCheckMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCheckMouseEntered(evt);
            }
        });
        getContentPane().add(lblCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, 40, 30));

        lblCodProducto.setBackground(new java.awt.Color(255, 51, 51));
        lblCodProducto.setFont(new java.awt.Font("Bahnschrift", 0, 24)); // NOI18N
        lblCodProducto.setForeground(new java.awt.Color(59, 26, 4));
        lblCodProducto.setText("Codigo Producto:");
        getContentPane().add(lblCodProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, 30));

        hamburguesa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/burger.png"))); // NOI18N
        getContentPane().add(hamburguesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, -1, 320));

        tblEleccion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CODIGO", "TIPO", "DESCRIPCION", "PRECIO"
            }
        ));
        tblEleccion.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        tblEleccion.setGridColor(new java.awt.Color(0, 0, 0));
        tblEleccion.setName(""); // NOI18N
        tblEleccion.setSelectionBackground(new java.awt.Color(204, 102, 0));
        tblEleccion.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblEleccion.setShowHorizontalLines(true);
        pnl.setViewportView(tblEleccion);

        getContentPane().add(pnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, 570, 240));

        txtCodProducto.setForeground(new java.awt.Color(65, 34, 0));
        txtCodProducto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtCodProducto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(251, 200, 149), 2, true));
        txtCodProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtCodProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodProductoActionPerformed(evt);
            }
        });
        txtCodProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodProductoKeyTyped(evt);
            }
        });
        getContentPane().add(txtCodProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 390, 30));

        btnFinalizarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/button_finalizar-pedido.png"))); // NOI18N
        btnFinalizarPedido.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFinalizarPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFinalizarPedidoMouseClicked(evt);
            }
        });
        btnFinalizarPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnFinalizarPedidoKeyPressed(evt);
            }
        });
        getContentPane().add(btnFinalizarPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 390, -1, -1));

        txtSuPago.setEditable(false);
        txtSuPago.setBackground(new java.awt.Color(249, 210, 167));
        txtSuPago.setSelectionColor(new java.awt.Color(255, 51, 0));
        txtSuPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSuPagoActionPerformed(evt);
            }
        });
        txtSuPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSuPagoKeyTyped(evt);
            }
        });
        getContentPane().add(txtSuPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 470, 170, 30));

        txtCambio.setEditable(false);
        txtCambio.setBackground(new java.awt.Color(249, 210, 167));
        txtCambio.setSelectionColor(new java.awt.Color(255, 51, 0));
        txtCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCambioActionPerformed(evt);
            }
        });
        getContentPane().add(txtCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 470, 160, 30));

        lblTotal.setForeground(new java.awt.Color(84, 42, 0));
        lblTotal.setText("TOTAL");
        getContentPane().add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 380, 50, -1));

        lblCambio.setForeground(new java.awt.Color(84, 44, 4));
        lblCambio.setText("CAMBIO");
        getContentPane().add(lblCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 450, 90, 20));

        lblSuPago.setForeground(new java.awt.Color(65, 32, 0));
        lblSuPago.setText("SU PAGO");
        getContentPane().add(lblSuPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 450, -1, -1));

        barra.setBackground(new java.awt.Color(115, 76, 50));
        barra.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(barra, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 30));

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(249, 210, 167));
        txtTotal.setSelectionColor(new java.awt.Color(255, 51, 51));
        getContentPane().add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, 170, 30));

        lblMapaDeComida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/lista.png"))); // NOI18N
        lblMapaDeComida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMapaDeComida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMapaDeComidaMouseClicked(evt);
            }
        });
        getContentPane().add(lblMapaDeComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 60, -1, 30));

        lblError.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lblError, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 280, 20));

        lblClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/clear_off.png"))); // NOI18N
        lblClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(lblClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 60, 40, 30));

        lblSupago_error.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        lblSupago_error.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lblSupago_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 500, 150, 20));

        img_patron.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gradient.jpeg"))); // NOI18N
        img_patron.setText("jLabel1");
        img_patron.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        img_patron.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(img_patron, new org.netbeans.lib.awtextra.AbsoluteConstraints(-90, 20, 930, 510));

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodProductoActionPerformed

    }//GEN-LAST:event_txtCodProductoActionPerformed

    private void lblCheckMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCheckMouseEntered

    }//GEN-LAST:event_lblCheckMouseEntered

    private void txtSuPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSuPagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSuPagoActionPerformed

    private void txtCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCambioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCambioActionPerformed

    private void lblCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCheckMouseClicked
        buscar();
    }//GEN-LAST:event_lblCheckMouseClicked


    private void txtSuPagoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSuPagoKeyTyped
        soloDecimal(evt);
    }//GEN-LAST:event_txtSuPagoKeyTyped


    private void txtCodProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodProductoKeyPressed
        char c = (char) evt.getKeyChar();
        if (c == evt.VK_ENTER) {
            buscar();
        }
    }//GEN-LAST:event_txtCodProductoKeyPressed

    private void txtCodProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodProductoKeyTyped
        soloEnteros(evt);
    }//GEN-LAST:event_txtCodProductoKeyTyped

    private void btnFinalizarPedidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnFinalizarPedidoKeyPressed


    }//GEN-LAST:event_btnFinalizarPedidoKeyPressed

    private void btnFinalizarPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinalizarPedidoMouseClicked
       

        // VERIFICO QUE TOTAL NO ESTE VACIO, SI NO HAY MONTO SIGNIFICA QUE NO SE HAN CARGADO PRODUCTOS .         
        
         if (!(txtTotal.getText().equals(""))) 
         {
            
        // VEFICAMOS QUE SE HAYA INGRESADO EL PAGO.
        
            if (!(txtSuPago.getText().equals(""))) 
            {
                double totalItem = Double.parseDouble(txtTotal.getText());
                double totalIngresado = Double.parseDouble(txtSuPago.getText());
                
                // VERIFICAMOS QUE EL MONTO INGRESADO SEA MAYOR AL MONTO TOTAL, DE LO CONTRARIO MUESTRA EL ERROR EN LA INTERFAZ. 
                if (totalIngresado < totalItem) 
                {
                    lblSupago_error.setText("Ingrese un pago mayor!");
                } 
                
                // SI ESTA TODO CORRECTO PROCEDERA A HACER EL CALCULO Y MOSTRARLO EN EL  INPUT CAMBIO.
                else 
                { 
                    txtCambio.setText(String.valueOf(totalIngresado - totalItem));
                    lblSupago_error.setText("");
                    txtSuPago.setEditable(false);
                    txtCambio.requestFocus();
                }
            }
            
            // MOSTRARA ERROR EN EL CASO DE QUE NO SE HAYA INGRESADO EL PAGO
            else 
            {
                lblSupago_error.setText("Ingrese su pago!");
            }
        }
    }//GEN-LAST:event_btnFinalizarPedidoMouseClicked
  
/*
    MOSTRARA LA LISTA DE PRODUCTOS 
*/ 
    private void lblMapaDeComidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMapaDeComidaMouseClicked
        new Listado().setVisible(true); 

    }//GEN-LAST:event_lblMapaDeComidaMouseClicked

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Main().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    /*
     * *********************************************************************************************************************************************
     * ************************************             METODOS PROPIOS                            ************************************************
     * *********************************************************************************************************************************************
     */
    //SET DE TABLA DE INTERFAZ
    private void setTabla() {
        tblEleccion.setModel(modelo);
        modelo.addColumn("CODIGO");
        modelo.addColumn("TIPO");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("PRECIO");
    }

    // PERMITE ESCRIBIR SOLO VALORES ENTEROS
    private void soloEnteros(java.awt.event.KeyEvent evt) {
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57 || key == 46;
        if (!numeros) {
            evt.consume();
        }
    }

    // PERMITE ESCRIBIR SOLO  VALORES DECIMALES
    private void soloDecimal(java.awt.event.KeyEvent evt) {
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57 || key == 46 || key == 44;
        if (!numeros) {
            evt.consume();
        }
    }

    // SUMA LOS PRECIOS DE LOS ITEMS SELECCIONADOS DE LA TABLA 
    private void sumarPrecio() {
        double totalPrecio = 0;
        // SUMAMOS TODOS LOS PRODUCTOS DE LA LISTA Y SE MUESTRA EN PANTALLA
        for (int i = 0; i < aList_productos.size(); i++) {
            totalPrecio += aList_productos.get(i).getPrecio();
        }
        txtTotal.setText(String.valueOf(totalPrecio));
    }

    //SET DE FUENTES
    private void setDeFuentes() {
        tipoFuente = new Fuentes();
        lblCodProducto.setFont(tipoFuente.fuente(tipoFuente.FLAME_regular_otf, 2, 20));
        txtCodProducto.setFont(tipoFuente.fuente(tipoFuente.FLAME_cursiva_otf, 0, 17));
        tblEleccion.setFont(tipoFuente.fuente(tipoFuente.FLAME_cursiva_otf, 0, 14));
        lblTotal.setFont(tipoFuente.fuente(tipoFuente.FLAME_cursiva_otf, 1, 14));
        lblCambio.setFont(tipoFuente.fuente(tipoFuente.FLAME_cursiva_otf, 1, 14));
        lblSuPago.setFont(tipoFuente.fuente(tipoFuente.FLAME_cursiva_otf, 1, 14));
        txtTotal.setFont(tipoFuente.fuente(tipoFuente.FLAME_cursiva_otf, 0, 14));
        txtCambio.setFont(tipoFuente.fuente(tipoFuente.FLAME_cursiva_otf, 0, 14));
        txtSuPago.setFont(tipoFuente.fuente(tipoFuente.FLAME_cursiva_otf, 0, 14));

    }

    // FUNCION PARA BUSCAR Y AGREGAR PRODUCTOS A LA TABLA, ADEMAS IRA SUMANDO LA MISMA.
    private void buscar() 
    {

        // CONSULTAMOS A LA BASE DE DATOS SI EXISTE EL ID QUE SE INGRESO
        String vector[] = new String[4];
        Producto aProducto = new Producto();
        String codProducto = String.valueOf(txtCodProducto.getText());
        try 
        {
            st = cx.prepareStatement("SELECT * FROM productos ");
            rs = st.executeQuery();

            while (rs.next()) 
            {
                // CARGAMOS EL VECTOR CON DATOS OBTENIDOS
                vector[0] = rs.getString("idproducto");
                vector[1] = rs.getString("tipo");
                vector[2] = rs.getString("descripcion");
                vector[3] = rs.getString("precio");
                
                // VERIFICACAMOS QUE EL INPUT TENGA DATO , DE LO CONTRARIO MOSTRARA ERROR.
                if (codProducto.equals("")) 
                {
                    lblError.setText("Ingrese codigo!!");
                } 
                else 
                {
                //COMPARAMOS SI EL CODIGO INGRESADO EN INTERFAZ ES IGUAL AL CODIGO OBTENIDO DE LA BD.
                    if (codProducto.equals(vector[0])) 
                    {
                        lblError.setText(""); // BORRAMOS EL LABEL POR SI HAY ALGUN ERROR COLGADO.
                        modelo.addRow(vector); // AGREGAMOS EL VECTOR A LA LISTA.
                        txtCodProducto.setText(""); //VACIAMOS EL INPUT CODIGO.
                        txtCodProducto.requestFocus(); //NOS POSICIONAMOS EN EL INPUT POR SI SE QUIERE AGREGAR UN PRODUCTO MAS.

                        aProducto.setPrecio(Float.parseFloat(vector[3])); // AGREGAMOS AL OBJETO EL NUEVO PRECIO DEL PRODUCTO ENCONTRADO.
                        aList_productos.add(aProducto); // AGREGAMOS AL ARRAY LIST DE PRODUCTOS UN NUEVO PRECIO PARA LUEGO CALCULARLO.
                        sumarPrecio(); // INVOCAMOS LA FUNCION PARA QUE SETEE LA SUMA DE LOS PRECIOS.
                        txtSuPago.setEditable(true); // HABILITAMOS PARA QUE SE PUEDA INGRESAR EL PAGO.
                        break;
                    } 
                    // EL CODIGO INGRESADO EN EL INPUT NO EXISTE EN LA BASE.
                    else 
                    {
                        lblError.setText("Codigo inexistente");
                        txtCodProducto.requestFocus();
                    }
                }
            }
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barra;
    private javax.swing.JLabel btnFinalizarPedido;
    private javax.swing.JLabel hamburguesa;
    private javax.swing.JLabel img_patron;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCambio;
    private javax.swing.JLabel lblCheck;
    private javax.swing.JLabel lblClear;
    private javax.swing.JLabel lblCodProducto;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblMapaDeComida;
    private javax.swing.JLabel lblSuPago;
    private javax.swing.JLabel lblSupago_error;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JScrollPane pnl;
    private javax.swing.JTable tblEleccion;
    private javax.swing.JTextField txtCambio;
    private javax.swing.JTextField txtCodProducto;
    private javax.swing.JTextField txtSuPago;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private Icon ImageIcon(URL resource) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
